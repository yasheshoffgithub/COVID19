<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='COVID19DASHBOARD_17239909241810' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Table2)' inline='true' name='federated.056ejut0ftenbv12ghd1w042bpbx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table2' name='excel-direct.1meobjt11k48jb191mvt11m2to4q'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yps12/Downloads/Projects/COVID19SQL/Table2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1meobjt11k48jb191mvt11m2to4q' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1meobjt11k48jb191mvt11m2to4q' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_063F2FA653DC4E94BC4409D149E2F50A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_063F2FA653DC4E94BC4409D149E2F50A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_063F2FA653DC4E94BC4409D149E2F50A]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/yps12/AppData/Local/Temp/TableauTemp/#TableauTemp_0fc4soz1n8u61312h7yg31eb31jo.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/18/2024 12:40:10 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_063F2FA653DC4E94BC4409D149E2F50A'>
            <properties context=''>
              <relation connection='excel-direct.1meobjt11k48jb191mvt11m2to4q' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TABLE3)' inline='true' name='federated.06owigq0iw527d1ed3urc0lxiedy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TABLE3' name='excel-direct.0d4n1rl0qo0qod141xnbf0jsa2bo'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yps12/Downloads/Projects/COVID19SQL/TABLE3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0d4n1rl0qo0qod141xnbf0jsa2bo' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0d4n1rl0qo0qod141xnbf0jsa2bo' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_08364F895E1B4A258E39A0B4A47041F0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_08364F895E1B4A258E39A0B4A47041F0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_08364F895E1B4A258E39A0B4A47041F0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_08364F895E1B4A258E39A0B4A47041F0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_08364F895E1B4A258E39A0B4A47041F0]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/yps12/AppData/Local/Temp/TableauTemp/#TableauTemp_0ibv3i50nks2c71cfix9t0re564w.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/18/2024 12:22:20 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_08364F895E1B4A258E39A0B4A47041F0'>
            <properties context=''>
              <relation connection='excel-direct.0d4n1rl0qo0qod141xnbf0jsa2bo' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table1)' inline='true' name='federated.1dfj6nu02vvlhs139bu6h1nwe4ea' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table1' name='excel-direct.1bgol3n18660xu18f2hyj1bbccuj'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yps12/Downloads/Projects/COVID19SQL/Table1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1bgol3n18660xu18f2hyj1bbccuj' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1bgol3n18660xu18f2hyj1bbccuj' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_61EA28397E364501954814E17274478A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_61EA28397E364501954814E17274478A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_61EA28397E364501954814E17274478A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_61EA28397E364501954814E17274478A]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/yps12/AppData/Local/Temp/TableauTemp/#TableauTemp_1vcxyx60xnym8t1fzzie30zoduys.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/18/2024 12:21:07 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_61EA28397E364501954814E17274478A'>
            <properties context=''>
              <relation connection='excel-direct.1bgol3n18660xu18f2hyj1bbccuj' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (TABLE4)' inline='true' name='federated.1ozqhd00s9ugh617vthlz16ki5x8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='TABLE4' name='excel-direct.1d2c9l50fss5c11940lna1sczk3y'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yps12/Downloads/Projects/COVID19SQL/TABLE4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1d2c9l50fss5c11940lna1sczk3y' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1d2c9l50fss5c11940lna1sczk3y' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6D2B572760D746018A497AFB917E0ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6D2B572760D746018A497AFB917E0ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6D2B572760D746018A497AFB917E0ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6D2B572760D746018A497AFB917E0ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6D2B572760D746018A497AFB917E0ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_6D2B572760D746018A497AFB917E0ABF]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/yps12/AppData/Local/Temp/TableauTemp/#TableauTemp_11189cg1iir65d1ee1psv1rb3xsx.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='08/18/2024 12:22:56 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>313</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6D2B572760D746018A497AFB917E0ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>304</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6D2B572760D746018A497AFB917E0ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1159</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6D2B572760D746018A497AFB917E0ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18862</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6D2B572760D746018A497AFB917E0ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>31224</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6D2B572760D746018A497AFB917E0ABF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_6D2B572760D746018A497AFB917E0ABF'>
            <properties context=''>
              <relation connection='excel-direct.1d2c9l50fss5c11940lna1sczk3y' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table1)' name='federated.1dfj6nu02vvlhs139bu6h1nwe4ea' />
          </datasources>
          <datasource-dependencies datasource='federated.1dfj6nu02vvlhs139bu6h1nwe4ea'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dfj6nu02vvlhs139bu6h1nwe4ea].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dfj6nu02vvlhs139bu6h1nwe4ea].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dfj6nu02vvlhs139bu6h1nwe4ea].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dfj6nu02vvlhs139bu6h1nwe4ea].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1dfj6nu02vvlhs139bu6h1nwe4ea].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dfj6nu02vvlhs139bu6h1nwe4ea].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dfj6nu02vvlhs139bu6h1nwe4ea].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dfj6nu02vvlhs139bu6h1nwe4ea].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1dfj6nu02vvlhs139bu6h1nwe4ea].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1dfj6nu02vvlhs139bu6h1nwe4ea].[:Measure Names]' value='174' />
            <format attr='height' value='61' />
            <format attr='text-format' field='[federated.1dfj6nu02vvlhs139bu6h1nwe4ea].[sum:DeathPercentage:qk]' value='n#,##0.00000;-#,##0.00000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#ebebeb' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1dfj6nu02vvlhs139bu6h1nwe4ea].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.2430939674377441' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1dfj6nu02vvlhs139bu6h1nwe4ea].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{62CB11CD-D197-4CB7-8F3B-53AC220E6ED9}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table2)' name='federated.056ejut0ftenbv12ghd1w042bpbx' />
          </datasources>
          <datasource-dependencies datasource='federated.056ejut0ftenbv12ghd1w042bpbx'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.056ejut0ftenbv12ghd1w042bpbx].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.056ejut0ftenbv12ghd1w042bpbx].[sum:TotalDeathCount:qk]' scope='rows' value='Total Deaths' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.056ejut0ftenbv12ghd1w042bpbx].[sum:TotalDeathCount:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.056ejut0ftenbv12ghd1w042bpbx].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.056ejut0ftenbv12ghd1w042bpbx].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{7D88A48F-1E77-441D-97F1-078BF7DFC6FC}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TABLE3)' name='federated.06owigq0iw527d1ed3urc0lxiedy' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.06owigq0iw527d1ed3urc0lxiedy'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.06owigq0iw527d1ed3urc0lxiedy].[Longitude (generated)]' field-type='quantitative' max='29834981.298312135' min='-27817740.685561825' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.06owigq0iw527d1ed3urc0lxiedy].[Latitude (generated)]' field-type='quantitative' max='18316652.308062214' min='-5272079.4175071511' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.06owigq0iw527d1ed3urc0lxiedy].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.06owigq0iw527d1ed3urc0lxiedy].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.06owigq0iw527d1ed3urc0lxiedy].[none:Location:nk]' />
              <color column='[federated.06owigq0iw527d1ed3urc0lxiedy].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.06owigq0iw527d1ed3urc0lxiedy].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06owigq0iw527d1ed3urc0lxiedy].[Latitude (generated)]</rows>
        <cols>[federated.06owigq0iw527d1ed3urc0lxiedy].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C139E75E-0FC2-45A3-B966-3CCC1BE06B54}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (TABLE4)' name='federated.1ozqhd00s9ugh617vthlz16ki5x8' />
          </datasources>
          <datasource-dependencies datasource='federated.1ozqhd00s9ugh617vthlz16ki5x8'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1ozqhd00s9ugh617vthlz16ki5x8].[tmn:date:qk]' scope='cols' value='Month ' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Location:nk]' />
              <text column='[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Location:nk]' />
              <color column='[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Forecast Indicator:nk]' />
              <text column='[federated.1ozqhd00s9ugh617vthlz16ki5x8].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ozqhd00s9ugh617vthlz16ki5x8].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.1ozqhd00s9ugh617vthlz16ki5x8].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{1FE0CE61-60CF-4B0E-9B4D-684D99B6F4AD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='13' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='16' param='vert' type-v2='layout-flow' w='99042' x='479' y='999'>
            <zone h='98002' id='14' type-v2='layout-basic' w='99042' x='479' y='999' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='27466' id='5' name='Sheet 2' w='39425' x='359' y='18976' />
        <zone h='44320' id='6' name='Sheet 3' w='44578' x='40144' y='1873' />
        <zone h='44944' id='7' name='Sheet 4' w='83463' x='1138' y='49563' />
        <zone h='17104' id='8' name='Sheet 1' w='38226' x='539' y='1248' />
        <zone h='31086' id='9' name='Sheet 4' pane-specification-id='0' param='[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Location:nk]&#10;[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Forecast Indicator:nk]' type-v2='color' w='13421' x='85860' y='56055' />
        <zone h='17353' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.06owigq0iw527d1ed3urc0lxiedy].[sum:PercentPopulationInfected:qk]' type-v2='color' w='13481' x='86099' y='5368' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='17' param='vert' type-v2='layout-flow' w='99042' x='479' y='999'>
                <zone fixed-size='137' h='17104' id='8' is-fixed='true' name='Sheet 1' w='38226' x='539' y='1248'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44320' id='6' is-fixed='true' name='Sheet 3' w='44578' x='40144' y='1873'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17353' id='10' name='Sheet 3' pane-specification-id='0' param='[federated.06owigq0iw527d1ed3urc0lxiedy].[sum:PercentPopulationInfected:qk]' type-v2='color' w='13481' x='86099' y='5368'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='220' h='27466' id='5' is-fixed='true' name='Sheet 2' w='39425' x='359' y='18976'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44944' id='7' is-fixed='true' name='Sheet 4' w='83463' x='1138' y='49563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='31086' id='9' name='Sheet 4' pane-specification-id='0' param='[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Location:nk]&#10;[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Forecast Indicator:nk]' type-v2='color' w='13421' x='85860' y='56055'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{72E5961F-8EF4-4598-A281-8096952A8C90}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dfj6nu02vvlhs139bu6h1nwe4ea].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AA6F740-DAF7-4BC7-B777-27C988D7CCAC}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.056ejut0ftenbv12ghd1w042bpbx].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB08A2A8-A047-489E-B1D4-782481DD53F9}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06owigq0iw527d1ed3urc0lxiedy].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06owigq0iw527d1ed3urc0lxiedy].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{CD0E9426-3C6A-4431-912E-7FA2E2C14A40}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Location:nk]&#10;[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Forecast Indicator:nk]</field>
            <field>[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Location:nk]</field>
            <field>[federated.1ozqhd00s9ugh617vthlz16ki5x8].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ABA0C3D1-9F26-4804-A8E7-681D06EF85BD}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Forecast Indicator:nk]</field>
              <field>[federated.1ozqhd00s9ugh617vthlz16ki5x8].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{355C80A6-614F-447D-B602-E4DD3B23C627}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='85' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      R1CawwI6pAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
